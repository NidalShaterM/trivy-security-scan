name: CI/CD Pipeline with Trivy and Docker Hub

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  release:
    types: [published]

env:
  NODE_VERSION: 18  # Define Node.js version

jobs:
  security-checks:
    name: Lint & Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run npm audit for security vulnerabilities
        run: npm audit --audit-level=high

  docker-build-and-scan:
    name: Build & Scan Docker Image
    runs-on: ubuntu-latest
    needs: security-checks

    # Select environment based on the event type
    environment: ${{ github.event_name == 'release' && 'prod' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Image Tag
        id: set-tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "IMAGE_TAG=feature" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "IMAGE_TAG=non-prod" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            echo "IMAGE_TAG=prod" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.IMAGE_TAG }} .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.IMAGE_TAG }}'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: 1
      
      - name: Run Trivy Secret Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: '.'
          scanners: 'secret'
          exit-code: 1  # Fail if secrets are found

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.IMAGE_TAG }}
